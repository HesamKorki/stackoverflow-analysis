---
title: "StackOverFlow 2023 Analysis"
author: "Hesam Korki"
date: "Dec. 2023"
format:
  html:
    toc: true
    toc-location: left
    theme: journal
    code-fold: true
    df-print: paged
    smooth-scroll: true
    link-external-icon: true
    embed-resources: true
---

> There is a renv.lock file provided in the repo, we'd install the required packages and then laod the library

```{r}
library("tidyverse")
library("eurostat")
library("countrycode")
library("RColorBrewer")
library("ggbeeswarm")
```
# Loading Data

```{r}
data <- read_csv("data/survey_results_public.csv", show_col_types = FALSE)
eu_wage <- read_tsv("data/earn_mw_cur_tabular.tsv", show_col_types=FALSE)
```

## Configuring Plotting

```{r}
# defining a theme for adjusting spacings of graphs
adjust_spacing <-
  theme(
    plot.title = element_text(hjust = 0.5, margin = margin(b = 20)),
    plot.margin = margin(t=20, r=50, b=20, l=20, unit = "pt")
  )

primary_color <- "#BDBAD7"
secondary_color <- "#D2EAC9"
```


# Exploration

:::{.callout-note appearance="minimal"}
There are $89,184$ rows and $84$ columns

- Each row represents the answers of a participant
- Each column corresponds to a question of the survey 
:::

```{r}
glimpse(data)
```

:::{.callout-warning appearance="minimal"}
Most columns have values as a single string which contains semicolon separated values which is not as tidy as we would want.
:::


What interesting insights do you get by looking at this graph?


```{r}

level_order = c(
                "Prefer not to say",
                "65 years or older",
                "55-64 years old",
                "45-54 years old",
                "35-44 years old",
                "25-34 years old",
                "18-24 years old",
                "Under 18 years old"
                )
data |>
  ggplot() +
  aes(y = factor(Age, levels = level_order)) +
  geom_bar(fill = primary_color, alpha = 0.8) +
  geom_text(
    aes(label = scales::percent(after_stat(count)/sum(count))),
    stat = "count",
    hjust = -0.2,
    size = 3,
    color = "black"
  ) +
  labs(x = NULL, y = NULL, title = "How old are the participants?") +
  annotate(
    "label",
    x = 40000, y = 1.5,
    label = paste("Total Number of Participents:", scales::comma(nrow(data))),
    color = "black",
    size=3
  ) +
  theme_minimal() +
  scale_x_continuous(labels = scales::comma, limits = c(0, 50000)) +
  adjust_spacing 
  
```

```{r}

employment_df <- data |> 
  select(ResponseId, Employment, Currency, CompTotal, EdLevel, Age) |> 
  separate_rows(Employment, sep=";") |> 
  mutate(Employment=trimws(Employment)) |>
  drop_na(Employment)


employment_df |>
  ggplot() +
  aes(y = fct_rev(fct_infreq(Employment))) +
  geom_bar(fill = primary_color, alpha = 0.8) +
  geom_text(
    aes(label = scales::percent(after_stat(count)/sum(count))),
    stat = "count",
    hjust = -0.2,
    size = 3,
    color = "black"
  ) +
  labs(x = NULL, y = NULL, title = "Employment status of respondants") +
  theme_minimal() +
  adjust_spacing + 
  scale_x_continuous(labels = scales::comma, limits = c(0, 70000))
```
```{r}

continent_data <- data |>
  mutate(Continent = countrycode(
    sourcevar = Country,
    origin = "country.name",
    destination = "continent"
  )) |>
  drop_na(Continent) |> 
  group_by(Continent, Country) |> 
  summarise(freq= n()) |> 
  mutate(
    Country = case_when(
      Country == "United States of America" ~ "USA",
      Country == "United Kingdom of Great Britain and Northern Ireland" ~ "UK",
      TRUE ~ Country
    )
  )

custom_brewer <-  brewer.pal(11, "Set3")
custom_brewer[c(9,11)] <- custom_brewer[c(11,9)]

continent_data |>
  ggplot() +
  aes(y = Continent,
      x = freq,
      fill = fct_lump(Country, n=10, w=freq)) +
  geom_col() +
  labs(title = "Diversity of Respondants", x = NULL, y = NULL, fill=NULL) +
  scale_x_continuous(labels = scales::comma) +
  theme_minimal()+ 
  scale_fill_manual(values= custom_brewer) +
  adjust_spacing

```


```{r}
continent_data |> 
  arrange(desc(freq))
  
```





```{r}
eu <- data |> 
  filter(Currency == "EUR European Euro") |> 
  drop_na(CompTotal)# |> 
  # filter(CompTotal<500000)


eu |>
  ggplot(aes(x=CompTotal)) +
  geom_histogram(bins=120) +
  geom_vline(aes(xintercept = median(CompTotal)), color = primary_color, linetype = "dashed", size = 1) +
  geom_vline(aes(xintercept = mean(CompTotal)), color = secondary_color, linetype = "dashed", size = 1) +
  annotate(
    "label",
    x = 10, y = 1500,
    label = paste("Medain:", scales::comma(median(eu$CompTotal), suffix = " \u20AC")),
    color = primary_color,
    fill = "black",
    size=3
  ) +
  annotate(
    "label",
    x = 10, y = 1600,
    label = paste("Mean:", scales::comma(mean(eu$CompTotal), suffix = " \u20AC")),
    color = secondary_color,
    fill = "black",
    size=3.3
  ) +
  scale_x_log10(labels = scales::label_comma(suffix = " \u20AC")) +
  labs(x=NULL, y=NULL, title="Distribution of Gross Annual Income") +
  adjust_spacing
  
  
  
```

```{r}
eu |> 
  ggplot() +
  aes(x=fct_lump(Country, n=10, w=CompTotal), y=CompTotal) +
  geom_quasirandom(dodge.width = 1, size=0.1, bandwidth=0.8, color=custom_brewer[5]) + 
  scale_y_log10(labels = scales::label_comma(suffix = " \u20AC")) + 
  labs(x=NULL, y=NULL, title="EU Gross Salary Distribution by Country") +
  theme(axis.text.x = element_text(angle = 30, hjust = 1)) +
  adjust_spacing
```
Change the x axis labels


```{r}
eu_employment <- 
  employment_df |> 
    filter(Currency == "EUR European Euro") |> 
    drop_na(CompTotal) |> 
    drop_na(EdLevel)

stat_emp <- eu_employment |> summarise(mean_emp=mean(CompTotal), .by=Employment)
  
eu_employment |> 
  ggplot(aes(x=Employment, y=CompTotal)) +
  geom_quasirandom(dodge.width = 1, size=0.1, bandwidth=0.8, color=custom_brewer[5]) +
  geom_segment(data=stat_emp, aes(x = as.numeric(factor(Employment)) - 0.3, 
                   xend = as.numeric(factor(Employment)) + 0.3,
                   y = mean_emp, 
                   yend = mean_emp),
               color = "red", linetype = "dashed", size = 0.4) +
  scale_y_log10(labels = scales::label_comma(suffix = " \u20AC")) + 
  labs(x=NULL, y=NULL, title="EU Gross Salary Distribution by Employment Status") +
  theme(axis.text.x = element_text(angle = 30, hjust = 1)) +
  adjust_spacing
```

## Does more experience shows more salary?